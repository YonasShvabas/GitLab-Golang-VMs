# See https://docs.gitlab.com/ee/ci/yaml/
image: golang:latest

# we have to declare REPO_NAME variable to get working directory path
variables:
  REPO_NAME: Simple-Golang-HTTP-Server

# update working directory with source code
before_script:
  - ln -svf $CI_PROJECT_DIR /usr/lib/go-1.6/src
  - cd /usr/lib/go-1.6/src/$REPO_NAME

stages:
    - test
    - build
    - deploy

# job to test source code
format:
    stage: test
    tags:
      - test
    script:
# format source code
      - go fmt
# find suspicious construct
      - go vet
# run main_test.go
      - go test -race

# job to obtain binary
compile:
    stage: build
    tags:
      - test
    script:
# create binary
      - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/gohttp
    artifacts:
      paths:
# get (upload) created binary ("artifact")
        - gohttp

# enviroment for testing
testenv:
    stage: deploy
    tags:
      - test
    script:
# change service binary
      - sudo service gohttp stop
      - cp -fv /usr/lib/go-1.6/src/$REPO_NAME/gohttp /usr/local/bin/
      - sudo service gohttp start

# working enviroment
prodenv:
    stage: deploy
    tags:
      - prod
    script:
# change service binary
      - sudo service gohttp stop
      - cp -fv /usr/lib/go-1.6/src/$REPO_NAME/gohttp /usr/local/bin/
      - sudo service gohttp start
    only:
      - production
    dependencies:
# get binary from job 'compile'
      - compile